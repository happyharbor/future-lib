# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
executors:
  java-executor:
    docker:
      - image: cimg/openjdk:13.0
jobs:
  build_test:
    executor:
      java-executor

    working_directory: ~/repo

    steps:
      - checkout

      # run tests!
      - run: ./gradlew test jacocoTestReport

      - run: ./gradlew sonarqube

      - persist_to_workspace:
          root: .
          paths:
            - build/*


  publish_snapshot:
    executor:
      java-executor

    working_directory: ~/repo

    steps:
      - checkout
      - attach_workspace:
          at: repo/
      - run:
          command: |
            echo 'export ORG_GRADLE_PROJECT_signingKey=$(echo $ORG_GRADLE_PROJECT_signingKey_encoded | base64 -d)' >> $BASH_ENV
            source $BASH_ENV
      - run: ./gradlew publish


  publish_release:
    executor:
      java-executor

    working_directory: ~/repo

    steps:
      - checkout
      - attach_workspace:
          at: repo/

      - run: git config --global user.email "circlesci@happyharbor.io"
      - run: git config --global user.name "Circles CI"

      - run:
          command: |
            echo 'export ORG_GRADLE_PROJECT_signingKey=$(echo $ORG_GRADLE_PROJECT_signingKey_encoded | base64 -d)' >> $BASH_ENV
            source $BASH_ENV
      - run: ./gradlew -q newMasterVersion
      - run: ./gradlew publish
      - run: ./gradlew closeAndReleaseRepository

      - run: git add build.gradle
      - run: git commit --amend -m "`git show -s --format=%s -1`" -m"[ci skip]"
      - run: git push --set-upstream origin master --force
      - run: echo 'export MASTER_VERSION=$(./gradlew -q getVersion)' >> $BASH_ENV
      - run: git tag -a $MASTER_VERSION -m "New master version $MASTER_VERSION"
      - run: git push origin $MASTER_VERSION

      - run: git checkout develop
      - run: git rebase origin/master
      - run: ./gradlew -q newMinorVersion
      - run: echo 'export DEV_VERSION=$(./gradlew -q getVersion)' >> $BASH_ENV
      - run: git add build.gradle
      - run: git commit -m"New development version $DEV_VERSION" -m"[ci skip]"
      - run: git push --set-upstream origin develop

      - run:
          name: Revert commit when build fails
          command: |
            git reset --hard HEAD^
            git commit --amend -m "`git show -s --format=%s -1`" -m"[ci skip]"
            git push -f
            git push --delete origin $MASTER_VERSION || true
          when: on_fail


workflows:
  test_and_publish:
    jobs:
      - build_test:
          context:
            - SonarCloud
      - publish_release:
          requires:
            - build_test
          filters:
            branches:
              only:
                - master
          context:
            - maven_publish
